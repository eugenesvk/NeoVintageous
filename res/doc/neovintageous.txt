*neovintageous.txt*                                        *nv* *neovintageous*

        _   __         _    ___       __
       / | / /__  ____| |  / (_)___  / /_____ _____ ____  ____  __  _______
      /  |/ / _ \/ __ \ | / / / __ \/ __/ __ `/ __ `/ _ \/ __ \/ / / / ___/
     / /|  /  __/ /_/ / |/ / / / / / /_/ /_/ / /_/ /  __/ /_/ / /_/ (__  )
    /_/ |_/\___/\____/|___/_/_/ /_/\__/\__,_/\__, /\___/\____/\__,_/____/
                                            /____/
                                                    Advanced Vim emulation!


Jump to a subject:  Position the cursor on a tag (e.g. |bars| and hit CTRL-].
        Jump back:  Type CTRL-I or CTRL-O.  Repeat to go further back.

Vim feature-parity is an ongoing effort, some features are not implemented or
implemented fully, and differences are not fully documented.

The vim documentation is provided in full without modification and this page
tries to document some feature differences and special features and usage.

Please open issues to request missing features.

If you are new to vim also see|help.txt|.

CONTENTS                                                         *nv-contents*

    Options ........................ |nv-options|
    Settings ....................... |nv-settings|
    Neovintageousrc ................ |nv-rc|
    Multiple cursors ............... |nv-multiple-cursors|
    Window splits .................. |nv-window-splits|
    Toggle Sidebar ................. |nv-toggle-sidebar|
    Plugins ........................ |nv-plugins|
    Option toggling ................ |nv-option-toggling|
    Mapping capslock to escape ..... |nv-capslock|
    Key presses are laggy or slow .. |nv-keyboard-repeat|
    Search highlighting ............ |nv-search-highlighting|
    Highlighted yank ............... |nv-highlightedyank|
    Toggle plugin .................. |nv-toggle|


==============================================================================

OPTIONS                                                           *nv-options*

To edit options use the command palette "Open RC File".

To reload options use the command palette "Reload RC File".

See `:help '{option}'` for help on individual options.

    'autoindent'
    'belloff'
    'expandtab'
    'hlsearch'
    'ignorecase'
    'incsearch'
    'list'
    'magic'
    'menu'
    'minimap'
    'modeline'
    'modelines'
    'number'
    'relativenumber'
    'scrolloff'
    'shell'
    'sidebar'
    'smartcase'
    'spell'
    'statusbar'
    'tabstop'
    'textwidth'
    'winaltkeys'
    'wrap'
    'wrapscan'

==============================================================================

SETTINGS                                              *settings* *nv-settings*

To edit settings go to Menu → Preferences → Settings.

                                                           *'highlightedyank'*
'highlightedyank'       boolean (default on)

                                                  *'highlightedyank_duration'*
'highlightedyank_duration'
                        number (default 1000)
        Assign number of time in milliseconds.

                                                     *'highlightedyank_style'*
'highlightedyank_style' string (default "fill")
        Valid values: fill, outline, underline, squiggly_underline,
        stippled_underline.

                                            *'neovintageous_search_cur_style'*
'neovintageous_search_cur_style'
                        string (default "fill")
        The current search style. Valid values: fill, outline, underline,
        squiggly_underline, stippled_underline.

                                            *'neovintageous_search_inc_style'*
'neovintageous_search_inc_style'
                        string (default "fill")
        The incremental search style. Valid values: fill, outline, underline,
        squiggly_underline, stippled_underline.

                                            *'neovintageous_search_occ_style'*
'neovintageous_search_occ_style'
                        string (default "fill")
        The search occurrences style. Valid values: fill, outline, underline,
        squiggly_underline, stippled_underline.

                                                           *'vintageous_bell'*
'vintageous_bell'       string (default "blink")
        Visual bell style type. Valid values are: blink, view, or views.

                                              *'vintageous_bell_color_scheme'*
'vintageous_bell_color_scheme'
                        string (default "dark")
        Visual bell color scheme. Valid values are: "dark", "light", or a
        color scheme path e.g. "Packages/Package/Name.hidden-color-scheme".

                                                   *'vintageous_default_mode'*
'vintageous_default_mode'
                        string (default "")
        The default mode to use when activating or switching views.

        "insert"

            Enter insert mode when opening or switching views or when the
            window receives focus and is not in visual mode i.e. visual mode
            selections are retained when the window loses focus.

                                                 *'vintageous_enable_abolish'*
'vintageous_enable_abolish'
                        boolean (default on)

                                              *'vintageous_enable_commentary'*
'vintageous_enable_commentary'
                        boolean (default on)

                                        *'vintageous_enable_multiple_cursors'*
'vintageous_enable_multiple_cursors'
                        boolean (default on)

                                                   *'vintageous_enable_sneak'*
'vintageous_enable_sneak'
                        boolean (default off)

                                                 *'vintageous_enable_sublime'*
'vintageous_enable_sublime'
                        boolean (default on)

                                                *'vintageous_enable_surround'*
'vintageous_enable_surround'
                        boolean (default on)

                                              *'vintageous_enable_unimpaired'*
'vintageous_enable_unimpaired'
                        boolean (default on)

'vintageous_handle_keys'                            *'vintageous_handle_keys'*
                        dict (default {})

        List of of keys to ignore. Ignored keys are handled by Sublime Text.

        For example to ignore ctrl+f: >

            "vintageous_handle_keys": {
                "<C-f>": false
            }
        <
        By default all keys are handled.

        Keys can be ignored for specific modes.

        The following will ignore <C-w> in insert and visual mode: >

            "vintageous_handle_keys": {
                "i_<C-w>": false
                "v_<C-w>": false
            }
        <
        The mode prefixes are:

            n_ - Normal
            i_ - Insert
            v_ - Visual
            V_ - Visual line
            b_ - Visual block
            s_ - Select

        No prefix implies all modes.

                                              *'vintageous_i_escape_jj'*
'vintageous_i_escape_jj'
                        boolean (default off)
        Map insert mode jj to <Esc>.

                                                    *'vintageous_i_escape_jk'*
'vintageous_i_escape_jk'
                        boolean (default off)
        Map insert mode jk to <Esc>.

                             *'vintageous_multi_cursor_exit_from_visual_mode'*
'vintageous_multi_cursor_exit_from_visual_mode'
                        boolean (default off)
        If set to false, pressing the quit key (<Esc> or J) in Visual mode
        will not quit and delete all existing cursors. Useful if you want to
        go to Normal mode, and still be able to operate on all the cursors.

                                                       *'vintageous_lsp_save'*
'vintageous_lsp_save'
                        boolean (default off)
        Override native save to handle LSP Code-Actions-On-Save.
        See https://github.com/sublimelsp/LSP/issues/1725

                                 *'vintageous_reset_mode_when_switching_tabs'*
'vintageous_reset_mode_when_switching_tabs'
                        boolean (default on)
        Reset to normal mode when a view is activated.

                                                   *'vintageous_shell_silent'*
'vintageous_shell_silent'
                        boolean (default off)
        Show output panel from shell commands.

                                               *'vintageous_sneak_use_ic_scs'*
'vintageous_sneak_use_ic_scs'
                        number (default 0)
        0: Always case-sensitive
        1: Case sensitivity is determined by 'ignorecase' and 'smartcase'.

                                                  *'vintageous_use_ctrl_keys'*
'vintageous_use_ctrl_keys'
                        boolean (default on)
        Enable key bindings prefaced by the ctrl-key.

                                                 *'vintageous_use_super_keys'*
'vintageous_use_super_keys'
                        boolean (default on)
        Enable key bindings prefaced by the super-key, otherwise known as the
        command-key in OSX, and as the windows-key in Windows.

                                              *'vintageous_use_sys_clipboard'*
'vintageous_use_sys_clipboard'
                        boolean (default off)
        Propagate copy actions to the system clipboard.

==============================================================================

NEOVINTAGEOUSRC                       *vintageousrc* *neovintageousrc* *nv-rc*

A file that contains initialization commands is called a "vimrc" file, in
NeoVintageous this is called a "neovintageousrc" file. Each line in the
runtime configuration file is executed as an Ex command at startup.

The|mapleader|variable is supported: >

    let mapleader=,

The|set|command is partially supported (see|nv-options|):

    :se[t] {option}?    Show value of {option}.
    :se[t] no{option}   Toggle option: Reset, switch it off.
    :se[t] {option}!    or
    :se[t] inv{option}  Toggle option: Invert value.
    :se[t] {option}     Toggle option: set, switch it on.
                        Number option: show value.
                        String option: show value.

The|:map-commands|are partially supported.

    :noremap  {lhs} {rhs} |:noremap|
    :nnoremap {lhs} {rhs} |:nnoremap|
    :onoremap {lhs} {rhs} |:onoremap|
    :snoremap {lhs} {rhs} |:snoremap|
    :vnoremap {lhs} {rhs} |:vnoremap|

Use <CR> to indicate pressing enter: >

    noremap <C-s> :w<CR>

Support for mapping to Sublime Text commands is available. Format the command
name as PascalCase and pass arguments in space separated key-value pairs: >

    nnoremap <leader>f :ShowOverlay overlay=goto text=@<CR>

File type specific mappings are supported: >

    nnoremap FileType go gd :LspSymbolDefinition<CR>

Multiple file types can be specified as a comma-delimited value: >

    nnoremap FileType go,html gd :LspSymbolDefinition<CR>

Chaining commands is supported by use of the special <Bar> character: >

    nnoremap <leader>m :Cmd1<Bar>:Cmd2<CR>

Super-keys (`<D-...>`) are supported and are disabled by default: >

    nnoremap <D-i> :GotoSymbolInProject<CR>

Toggle super-keys from the command palette "Toggle SUPER keys".

==============================================================================

MULTIPLE CURSORS                      *multiple-cursors* *nv-multiple-cursors*

normal mode and visual mode

    start:      <C-n>, gh       Start multiple cursor.
        next:   <C-n>, n, j     Add next match.
        skip:   <C-x> q, l      Skip next match.
        prev:   <C-p>, Q, k     Remove current match.
        all:    <M-n>, A        Select all matches.

You can now use visual commands e.g. c, I, x, y work without any issues.

You could also go to normal mode by pressing v and use normal commands there,
for example commands like ciw work without any issues.

At any time you can press <Esc> or J to exit back to regular Vim. To change
the behaviour of exiting see 'vintageous_multi_cursor_exit_from_visual_mode'.

<C-n>, gh               Start multiple cursor.
<C-n>, n, j             Add next match.
<C-x>, q, l             Skip next match.
<C-p>, Q, k             Remove current match and go back on previous.
<Esc>, J                Quit and enter normal mode.
<M-n>, A                Select all matches.
v                       Enter normal mode.
gH                      Select all search occurrences (/, ?, *, #).

Inspired by https://github.com/terryma/vim-multiple-cursors.
Inspired by https://github.com/mg979/vim-visual-multi.

==============================================================================

WINDOW SPLITS                                               *nv-window-splits*

Some window features require the Origami plugin:
https://packagecontrol.io/packages/Origami

CTRL-W CTRL-S
CTRL-W s
CTRL-W S
:sp[lit] [file]         Split current window in two. The result is two views
                        on the same file. See|CTRL-W_s|for more details.

CTRL-W CTRL-V
CTRL-W v
CTRL-W V
:vs[plit] [file]        Like|:split|but split vertically. See|CTRL-W_v|.

==============================================================================

TOGGLE SIDEBAR                            *toggle-sidebar* *nv-toggle-sidebar*

Example mapping: >

    let mapleader=,
    nnoremap <leader>d :Neovintageous action=toggle_side_bar<CR>

Then add a key binding (this is for when the side bar has focus).

Menu → Preferences → Key Bindings: >

    {
        "keys": [",", "d"],
        "command": "neovintageous",
        "args": {"action": "toggle_side_bar"},
        "context": [{"key": "control", "operand": "sidebar_tree"}]
    }

==============================================================================

REVEAL SIDEBAR                            *reveal-sidebar* *nv-reveal-sidebar*

Example mapping: >

    let mapleader=,
    nnoremap <leader>, :Neovintageous action=reveal_side_bar<CR>

Then add a key binding (this is for when the side bar has focus).

Menu → Preferences → Key Bindings: >

    {
        "keys": [",", ","],
        "command": "focus_group",
        "args": {"group": 0},
        "context": [{"key": "control", "operand": "sidebar_tree"}]
    },

==============================================================================

PLUGINS                                                 *plugins* *nv-plugins*

NeoVintageous ships with plugins out-of-the-box. Feature-parity is an ongoing
effort and functional differences are not documented. Please open an issues
to request missing features that you would like to see supported.

    vim-abolish             https://github.com/tpope/vim-abolish
    vim-commentary          https://github.com/tpope/vim-commentary
    vim-highlightedyank     https://github.com/machakann/vim-highlightedyank
    vim-indent-object       https://github.com/michaeljsmith/vim-indent-object
    vim-multiple-cursors    https://github.com/terryma/vim-multiple-cursors
    vim-sneak               https://github.com/justinmk/vim-sneak
    vim-surround            https://github.com/tpope/vim-surround
    vim-targets             https://github.com/wellle/targets.vim
    vim-unimpaired          https://github.com/tpope/vim-unimpaired

==============================================================================

Option toggling                                           *nv-option-toggling*

Toggles included in addition to |unimpaired-toggling|.

 On      Off     Toggle Option
*[oa*   *]oa*   *yoa*   'menu'
*[oe*   *]oe*   *yoe*   'statusbar'
*[om*   *]om*   *yom*   'minimap'
*[ot*   *]ot*   *yot*   'sidebar'

==============================================================================

Mapping capslock to escape                                       *nv-capslock*

Neovintageous cannot remap the CapsLock, however it can be remapped at an OS
level. For example, on Ubuntu you can map CapsLock to Escape at the terminal
using a tool called gsettings: >

    gsettings set org.gnome.desktop.input-sources xkb-options "['caps:escape']"

==============================================================================

Key presses are laggy or slow                             *nv-keyboard-repeat*

On OSX, if holding down a key like "j" does not repeat the command (a feature
of OSX), you make a key repeat by running this once at the terminal: >

    defaults write com.sublimetext.3 ApplePressAndHoldEnabled -bool false

If key presses are slow or laggy first check the system configuration, for
example on Ubuntu you can configure keyboard repeat interval and delay: >

    gsettings set org.gnome.desktop.peripherals.keyboard repeat-interval 15
    gsettings set org.gnome.desktop.peripherals.keyboard delay 180

and for KDE: >

    systemsettings5 kcm_keyboard

brings up a window where you can change 'Delay' and 'Rate' as required.

In general if you are on X11 type systems you could directly use: >

    xset r rate <milliseconds_before_repeating> <repetitions_per_second>

==============================================================================

Search highlighting                                   *nv-search-highlighting*

The colors for search highlighting can be customised.

For example, if you're using a color scheme named "Monokai", create an
override file named `Monokai.sublime-color-scheme` in the User dir: >

    {
        "rules": [
            {
                "scope": "neovintageous_search_inc",
                "background": "#a1efe4",
                "foreground": "#272822"
            },
            {
                "scope": "neovintageous_search_cur",
                "background": "#a1efe4",
                "foreground": "#272822"
            },
            {
                "scope": "neovintageous_search_occ",
                "background": "#e6db74",
                "foreground": "#272822"
            }
        ]
    }

==============================================================================

HIGHLIGHTEDYANK                         *highlightedyank* *nv-highlightedyank*

Inspired by https://github.com/machakann/vim-highlightedyank.

HighlightedYank is a plugin to highlight the yanked region.

When new text is yanked, the old highlighting is deleted. Or when former lines
are edited, the highlighting is deleted to prevent shifting the position, also.

The highlighted duration can be configured by the 'highlightedyank_duration'
setting and the style can be configured by 'highlightedyank_style'.

To customise the colors, create a color scheme override for your color scheme:
for example if you have the default Monokai color scheme enabled, create a file
named `Monokai.sublime-color-scheme` in the User directory (find the User
directory location via the Menu → Preferences → Browse Packages...), then
create the styles using the scopes: >

To customise the colors, create a color scheme override: for example if you
have the default Monokai color scheme enabled - create a file named
Monokai.sublime-color-scheme in the Sublime Text User directory
(Menu → Preferences → BrowsePackages...), and create the styles using the
"highlightedyank" scope: >

    {
        "rules": [
            {
                "scope": "highlightedyank",
                "background": "#e6db74",
                "foreground": "#272822"
            }
        ]
    }

==============================================================================

TOGGLE COMMAND                                                     *nv-toggle*

If you want to be able to toggle NeoVintageous on and off, you need to install
the toggle package: https://packagecontrol.io/packages/ToggleNeoVintageous.

vim: tw=78 nu nowrap
